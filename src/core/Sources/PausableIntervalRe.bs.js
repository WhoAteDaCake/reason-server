// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var UtilsRe$ReactTemplate = require("../UtilsRe.bs.js");

function pausableInterval(period, action, sink) {
  if (action !== 0) {
    return /* () */0;
  } else {
    var i = [0];
    var interval = [/* None */0];
    var pause = function () {
      var match = interval[0];
      if (match) {
        clearInterval(match[0]);
        interval[0] = /* None */0;
        return /* () */0;
      } else {
        return /* () */0;
      }
    };
    var resume = function () {
      interval[0] = /* Some */[setInterval((function () {
                UtilsRe$ReactTemplate.whenTalk(sink, (function (talk) {
                        return Curry._2(talk, /* Data */1, /* Content */Block.__(0, [i[0]]));
                      }));
                i[0] = i[0] + 1 | 0;
                return /* () */0;
              }), period)];
      return /* () */0;
    };
    UtilsRe$ReactTemplate.whenTalk(sink, (function (talk) {
            return Curry._2(talk, /* Start */0, /* Talkback */Block.__(1, [(function (action, _) {
                              switch (action) {
                                case 0 : 
                                    return resume(/* () */0);
                                case 1 : 
                                    var match = interval[0];
                                    if (match) {
                                      return pause(/* () */0);
                                    } else {
                                      return resume(/* () */0);
                                    }
                                case 2 : 
                                    return pause(/* () */0);
                                
                              }
                            })]));
          }));
    return resume(/* () */0);
  }
}

exports.pausableInterval = pausableInterval;
/* No side effect */
